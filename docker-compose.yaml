services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: testtaskdb
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d testtaskdb"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    networks:
      - app_network

  django:
    build: .
    container_name: django
    command: bash -c "while ! nc -z postgres 5432; do sleep 1; done && python shop/manage.py migrate && python shop/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    env_file:
      - shop/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

  bot:
    build: .
    container_name: bot
    command: bash -c "while ! nc -z postgres 5432; do sleep 2; done && python shop/tg_bot/main.py"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8080"
    env_file:
      - shop/.env
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: